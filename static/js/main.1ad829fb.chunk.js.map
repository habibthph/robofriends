{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardcomponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAAC,GACb,IADcC,EACf,EADeA,KAAMC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,GAExB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAjBE,SAAC,GACjB,IADkBC,EACnB,EADmBA,OAETC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAEPT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAKT,OACI,8BACKH,KCCEI,EAbG,SAAC,GACnB,EADoBC,YACnB,IADgCC,EACjC,EADiCA,aAE7B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDPI,EAPA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SAA+EJ,EAAMK,YCqB9EC,E,kDAtBX,WAAYN,GACX,IAAD,8BACI,cAAMA,IACDO,MAAQ,CAACC,UAAS,GAF3B,E,qDAKA,SAAkBC,EAAOC,GAErBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WAEI,OAAGG,KAAKJ,MAAMC,SACJ,0DAGHG,KAAKX,MAAMK,a,GAnBCQ,aCuDZC,G,wDAhDX,aACC,IAAD,8BACI,gBAOJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SARzC,EAAKX,MAAQ,CACTnB,OAAQ,GACRM,YAAa,IAJrB,E,qDAcA,WACC,IAAD,OACIyB,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKX,SAAS,CAACxB,OAAOmC,S,oBAK9B,WAEI,MAA8BZ,KAAKJ,MAA5BnB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACT8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GAAQ,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAElG,OAAQvC,EAAOyC,OAGX,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAQoC,WAP/B,gD,GAjCUX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1ad829fb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) =>\n{\n    return(\n        <div className='tc bg-light-green dib br3 pa3  ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}></img>\n            <div>   \n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) =>\n{\n    const cardcomponent = robots.map((user, i) => {\n        return <Card \n        key={i} \n        id={robots[i].id} \n        name={robots[i].name} \n        email={robots[i].email} />\n    })\n    return(\n        <div>\n            {cardcomponent}\n         </div>\n\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) =>\n{\n    return(\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue' \n            type='Search' \n            placeholder='search robots'\n            onChange={searchChange}></input>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>\n{\n    return (\n        <div style={{overflowY:'scroll', border: '1px solid black', height: '800px'}}>{props.children}</div>\n    );\n};\n\nexport default Scroll;\n\n//","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {hasError:false}\n    }\n\n    componentDidCatch(error, info)\n    {\n        this.setState({hasError:true})\n    }\n\n    render()\n    {\n        if(this.state.hasError){\n            return<h1>Oooops. That is not good</h1>\n        }\n\n        return this.props.children\n    }\n\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll.js';\nimport ErrorBoundry from '../components/ErrorBoundry.js';\nimport './App.css';\n\nclass App extends Component\n{\n    constructor()\n    {\n        super()\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    onSearchChange = (event) =>\n    {\n        this.setState({searchField: event.target.value})\n  \n    }\n\n    componentDidMount()\n    {\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=> {\n            return response.json();  \n        }).then(users => {\n            this.setState({robots:users})\n        })  \n    }\n\n\n    render()\n    {  \n        const {robots, searchField} = this.state;\n        const filteredRobots = robots.filter(robot=>{return robot.name.toLowerCase().includes(searchField.toLowerCase());})\n      \n        return !robots.length ?\n        <h1>Loading...</h1> :\n        (\n            <div className='tc'>\n                <h1 className='f2'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}></SearchBox>\n                <Scroll>\n                    <ErrorBoundry>\n                     <CardList robots={filteredRobots}></CardList>\n                     </ErrorBoundry>\n                </Scroll>\n            </div>\n            );\n        \n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <div>\n    <App></App>\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}